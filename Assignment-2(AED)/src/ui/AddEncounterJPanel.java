/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import model.Community;
import model.Encounter;
import model.Patient;
/**
 *
 * @author riteesh
 */
public class AddEncounterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddEncounterJPanel
     */
    public AddEncounterJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSystolicBp = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        jLabel1.setText("Add Encounter");

        jLabel2.setText("Patient ID:");

        jLabel3.setText("Systolic BP:");

        btnSave.setText("Save!");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSystolicBp, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(btnSave)))))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSystolicBp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 766, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Encounter vs;
        Patient p;
        boolean patientExists;
        Community comm;

        int age = 0;
        p = new Patient();
        ArrayList<Encounter> existedArray = new ArrayList<>();
        Map<Patient, ArrayList<Encounter>> map = Patient.getEncounterHistory();
        patientExists = false;
        for (Patient patient : map.keySet()) {
            if (Integer.parseInt(txtPatientId.getText()) == patient.getPatientId()) {
                patientExists = true;
                existedArray = map.get(patient);
                p = patient;
            }
        }
        if (patientExists) {
            vs = new Encounter();

            vs.setSysBP(Double.parseDouble(txtSystolicBp.getText()));
            vs.setEntryDateTime(LocalDateTime.now());
            if(isVitalSignAbnormal(p,vs)){
                p.setAbnormal(true);
            }else{
                p.setAbnormal(false);
            }
            existedArray.add(vs);
            map.put(p, existedArray);
            JOptionPane.showMessageDialog(btnSave, "Added Vital Signs details successfully");
        } else {
            JOptionPane.showMessageDialog(btnSave, "Patient does not exist");
        }
 
    }//GEN-LAST:event_btnSaveActionPerformed
        public static boolean isVitalSignAbnormal(Patient p,Encounter vs) {

        Double sysBP = vs.getSysBP();
        int age = p.getAge();
//        System.out.println(p.getName()+" "+age);
        if (age == 0 && (sysBP > 70 || sysBP < 50)) {
//            System.out.println("Entered 0");
            return true;
        } else if ((age > 0 && age <= 12) && (sysBP < 70 || sysBP > 100)) {
//            System.out.println("Entered 1");
            return true;
        } else if ((age > 12 && age <= 60) && (sysBP < 80 || sysBP > 110)) {
//            System.out.println("Entered 1-5");
            return true;
        } else if ((age > 60 && age <= 144) && (sysBP < 80 || sysBP > 120)) {
//            System.out.println("Entered 6-12");
            return true;
        } else if ((age > 144) && (sysBP < 110 || sysBP > 120)) {
//            System.out.println("Entered 13+");
            return true;
        }
//        System.out.println("Not Entered");
        return false;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtSystolicBp;
    // End of variables declaration//GEN-END:variables
}
